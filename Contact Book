class Contact:
  def __init__(self, name, phone_number, email, address):
      self.name = name
      self.phone_number = phone_number
      self.email = email
      self.address = address
class ContactBook:
  def __init__(self):
      self.contacts = []
  def add_contact(self, contact):
      if not contact.name.isalpha():
          print("Invalid name. Name should contain only letters.")
          return
      if not contact.phone_number.isdigit():
          print("Invalid phone number. Phone number should contain only numbers.")
          return
      self.contacts.append(contact)
      print("Contact added successfully!")
  def view_contacts(self):
      if not self.contacts:
          print("No contacts found.")
      else:
          for idx, contact in enumerate(self.contacts, start=1):
              print(f"{idx}. Name: {contact.name}")
              print(f"   Phone Number: {contact.phone_number}")
              print(f"   Email: {contact.email}")
              print(f"   Address: {contact.address}")
              print()
  def search_contact(self, search_term):
      found_contacts = []
      for contact in self.contacts:
          if (search_term.lower() in contact.name.lower()) or (search_term in contact.phone_number):
              found_contacts.append(contact)
      return found_contacts
  def update_contact(self, index, updated_contact):
      self.contacts[index] = updated_contact
  def delete_contact(self, index):
      del self.contacts[index]
def main():
  contact_book = ContactBook()
  while True:
      print("\n*** Contact Book Menu ***")
      print("1. Add Contact")
      print("2. View Contacts")
      print("3. Search Contact")
      print("4. Update Contact")
      print("5. Delete Contact")
      print("6. Exit")
      choice = input("Enter your choice: ")
      if choice == '1':
          name = input("Enter name: ")
          phone_number = input("Enter phone number: ")
          email = input("Enter email: ")
          address = input("Enter address: ")
          contact = Contact(name, phone_number, email, address)
          contact_book.add_contact(contact)
      elif choice == '2':
          print("\n*** All Contacts ***")
          contact_book.view_contacts()
      elif choice == '3':
          search_term = input("Enter name or phone number to search: ")
          found_contacts = contact_book.search_contact(search_term)
          if found_contacts:
              print("\n*** Search Results ***")
              for contact in found_contacts:
                  print(f"Name: {contact.name}")
                  print(f"Phone Number: {contact.phone_number}")
                  print(f"Email: {contact.email}")
                  print(f"Address: {contact.address}")
                  print()
          else:
              print("No matching contacts found.")
      elif choice == '4':
          index = int(input("Enter index of contact to update: ")) - 1
          if 0 <= index < len(contact_book.contacts):
              name = input("Enter name: ")
              phone_number = input("Enter phone number: ")
              email = input("Enter email: ")
              address = input("Enter address: ")
              updated_contact = Contact(name, phone_number, email, address)
              contact_book.update_contact(index, updated_contact)
              print("Contact updated successfully!")
          else:
              print("Invalid index.")
      elif choice == '5':
          index = int(input("Enter index of contact to delete: ")) - 1
          if 0 <= index < len(contact_book.contacts):
              contact_book.delete_contact(index)
              print("Contact deleted successfully!")
          else:
              print("Invalid index.")
      elif choice == '6':
          print("Exited program.")
          break
      else:
          print("Invalid choice. Please enter a number from 1 to 6.")
if __name__ == "__main__":
  main()
